# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WTMex28GohKH1yqHZunYKOu_jV85fQeV
"""

from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

# URL do ESP32 (substitua pelo IP real do seu ESP32 na rede)
ESP32_URL = "http://192.168.1.100/relay"  # Exemplo de URL do ESP32

@app.route("/")
def home():
    return "Servidor Flask está rodando!", 200

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json  # Recebe os dados do Mercado Pago
    print("Dados recebidos:", data)

    if data and "action" in data and data["action"] == "payment.updated":
        payment_id = data["data"]["id"]

        # Simular consulta ao Mercado Pago para verificar pagamento aprovado
        payment_status = verificar_pagamento(payment_id)

        if payment_status == "approved":
            # Aciona o relé no ESP32
            response = requests.get(ESP32_URL)
            return jsonify({"message": "Pagamento aprovado! Relé acionado.", "status": "success"}), 200
        else:
            return jsonify({"message": "Pagamento não aprovado ainda.", "status": "pending"}), 200

    return jsonify({"message": "Requisição inválida."}), 400

def verificar_pagamento(payment_id):
    """
    Simula a verificação do pagamento no Mercado Pago.
    Aqui, você precisa integrar a API oficial do Mercado Pago para verificar o status real.
    """
    # Simulando retorno do Mercado Pago
    return "approved"  # Retorne "pending" ou "approved" baseado no pagamento real

if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=5000)